{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","logo.svg","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAEaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCJjBC,EAAW,SAACR,GACrB,OACI,qBAAKC,UAAY,YAAjB,SACKD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAAK,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,UCJpDO,G,MAAY,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAYC,EAAiB,EAAjBA,aACnC,OACA,uBAAOZ,UAAY,SAASa,KAAO,SAASF,YAAeA,EAAaG,SAAYF,MCgCzEG,GCpCA,I,wDDOb,aAAc,IAAD,8BACX,gBAYFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAACC,YAAcF,EAAEG,OAAOC,SAZtC,EAAKC,MAAQ,CACZb,SAAW,GACXU,YAAc,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAWkB,S,oBAK3C,WAAS,IAAD,EACyBC,KAAKN,MAA7Bb,EADD,EACCA,SAASU,EADV,EACUA,YACVU,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAAIA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYY,kBACpG,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAYW,YAAc,iBAAiBC,aAAgBe,KAAKf,eAChE,cAAC,EAAD,CAAWJ,SAAYoB,W,GAxBbI,cEMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ced4a745.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\nexport const Card = (props) =>{\r\n    return(\r\n        <div className = \"card-container\">\r\n            <img src={`https://robohash.org/${props.monster.id}?set=set3&size=180x180`} alt=\"monster\" />\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './card-list.styles.css';\r\nimport { Card } from '../card/card.component';\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className = 'card-list'>\r\n            {props.monsters.map(monster => (<Card key = {monster.id} monster = {monster} />))}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './search-box.styles.css';\r\nexport const SearchBox = ({placeholder,handleChange}) =>{\r\n    return(\r\n    <input className = \"search\" type = \"search\" placeholder = {placeholder} onChange = {handleChange} />\r\n    )\r\n}","import React,{Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox }  from './components/search-box/search-box.component';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n     monsters : [],\n     searchField : ''\n    }\n\n  }\n  componentDidMount(){\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(users => this.setState({monsters : users}));\n  }\n  handleChange = e =>{\n    this.setState({searchField : e.target.value})\n  }\n  render(){\n    const {monsters,searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n        <h1>MONSTERS ROLODEX</h1>\n        <SearchBox  placeholder = \"search monster\" handleChange = {this.handleChange} />\n        <CardList  monsters = {filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}